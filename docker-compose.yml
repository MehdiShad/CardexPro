version: "3.9"

services:
  db:
    image: postgres:14.1
    container_name: postgres
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  rabbitmq:
    image: "rabbitmq:alpine"
    ports:
      - ${RABBITMQ_PORT}:5672
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: django
#    command: ./docker/web_entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    volumes:
      - .:/app
    ports:
      - "${DJANGO_PORT}:8000"
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: worker
    command: celery -A cardexpro.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
#    command: ./docker/celery_entrypoint.sh
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: beats
#    command: ./docker/beats_entrypoint.sh
    command:
      - sh
      - -c
      - |
        python manage.py setup_periodic_tasks
        celery -A cardexpro.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure
